/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        int count1=count(headA);
        int count2=count(headB);
        
       int finalcount=0;
        if(count1>count2)
        {
            finalcount=count1-count2;
             return  intersect(headA,headB,finalcount);
        }
        else
        {
            finalcount=count2-count1;
             return  intersect(headB,headA,finalcount);
            
        }
      
        
    }
    
    public ListNode intersect(ListNode headA,ListNode headB,int count)
    {
        ListNode ans=null;
        for(int i=0;i<count;i++)
        {
            headA=headA.next;
        } 
        while(headA!=null && headB!=null)
        {
            if(headA==headB)
            {
                ans=headA;
                break;
                
            }
            headA=headA.next;
            headB=headB.next;
           
        }
        return ans;
    }
    public int count(ListNode head)
    {
        int c=0;
        
        ListNode curr=head;
        while(curr!=null)
        {
            c++;
            curr=curr.next;
            
            
        }
        return c;
    }
}
